plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'microservices.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.4.2.Final"
	springCloudVersion = "2021.0.2"
}

jar {
	enabled = false
}

dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation ('org.springframework.boot:spring-boot-starter-webflux') 
//		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-reactor-netty'
//	}
//	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive"
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testCompileOnly 'org.projectlombok:lombok'
	testCompileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testAnnotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	//  내장형 몽고db를 사용해 Junit 테스트 실행
	testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo"
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
