api:
  common:
    version: 1.0.0
    title: Sample API
    description: Description of the API...
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: Contact
      url: My
      email: me@mail.com
  product-composite:
    get-composite-product:
      description: productId에 맞는 상품의 리뷰와 추천을 보여준다.
      notes: |
        # Normal
        1. Product Information
        2. Reviews
        3. Recommendations
        4. Service Address (No prod)
        
        # Exception
        1. Product X : 404
        2. No reviews, recommendations : continue
    create-composite-product:
      description: 상품 생성
      notes: |
        # Normal
        Create product
        
        # Exception
        1. productId 중복 : 422 - Unprocessable Entity (duplicate key)
    
    delete-composite-product:
      description: 상품 삭제
      notes: |
        # Normal
        상품 + 관련된 추천, 리뷰 전체 삭제.


server:
  port: 7004
  error:
    include-message: always

app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

logging:
  level:
    root: INFO
    microservices.core: DEBUG

spring:
  profiles:
    group:
      "docker": "docker"
  rabbitmq:
    host: 127.0.0.1
      port: 5672
      username: guest
      password: guest
  cloud:
    function:
      definition: products;recommendations;reviews
      
    stream:
      kafka:
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092
          
      defaultBinder: rabbit
      
      default:
        contentType: application/json
        
      bindings:
        products-out-0:
          destination: products
          producer:
            required-groups: auditGroup
        recommendations-out-0:
          destination: recommendations
          producer:
            required-groups: auditGroup
        reviews-out-0:
          destination: reviews
          producer:
            required-groups: auditGroup

---
spring:
  config:
    activate:
      on-profile: "docker"
  rabbitmq:
    host: rabbitmq
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka
      
server:
  port: 8080

app:
  product-service:
    host: product
    port: 8080
  recommendation-service:
    host: recommendation
    port: 8080
  review-service:
    host: review
    port: 8080